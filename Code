#include <Wire.h>
#include <Adafruit_SHTC3.h>
#include <Adafruit_LTR390.h>
#include <FastLED.h>
#include <LoRa.h>

// Настройки светодиодной ленты
#define LED_PIN 5
#define NUM_LEDS 30
CRGB leds[NUM_LEDS];

// Реле для осушителя
const int dehumidifierPin = 13;

// Датчики
Adafruit_SHTC3 shtc3 = Adafruit_SHTC3();
Adafruit_LTR390 ltr = Adafruit_LTR390();

// PIR
const int pirPin = 4;
bool isOccupied = false;

// Пороговые значения
const float TEMP_THRESHOLD = 25.0;    // °C
const float HUMIDITY_THRESHOLD = 60.0; // %
const float LUX_THRESHOLD = 100;      // Люкс

void setup() {
  Serial.begin(115200);
  Wire.begin();

  // Инициализация датчиков
  if (!shtc3.begin()) Serial.println("SHTC3 не найден!");
  if (!ltr.begin()) Serial.println("LTR390 не найден!");
  ltr.setMode(LTR390_MODE_ALS);

  // Светодиодная лента
  FastLED.addLeds<WS2812, LED_PIN, GRB>(leds, NUM_LEDS);
  FastLED.setBrightness(50);

  // Реле
  pinMode(dehumidifierPin, OUTPUT);
  digitalWrite(dehumidifierPin, LOW);

  // LoRa
  LoRa.setPins(15, 2, 16); // CS, RST, IRQ
  if (!LoRa.begin(868E6)) Serial.println("LoRa не инициализирован!");
}

void loop() {
  // Чтение данных с датчиков
  sensors_event_t humidity, temp;
  shtc3.getEvent(&humidity, &temp);
  float lux = ltr.getLUX();

  // Проверка присутствия
  isOccupied = digitalRead(pirPin);

  // Управление освещением
  if (isOccupied && lux < LUX_THRESHOLD) {
    fill_solid(leds, NUM_LEDS, CRGB(255, 255, 200)); // Белый свет
  } else {
    fill_solid(leds, NUM_LEDS, CRGB::Black);
  }
  FastLED.show();

  // Управление осушителем
  if (humidity.relative_humidity > HUMIDITY_THRESHOLD) {
    digitalWrite(dehumidifierPin, HIGH); // Включить осушитель
  } else {
    digitalWrite(dehumidifierPin, LOW);  // Выключить осушитель
  }

  // Передача данных через LoRa
  String data = String(temp.temperature) + "," + String(humidity.relative_humidity) + "," + String(lux);
  LoRa.beginPacket();
  LoRa.print(data);
  LoRa.endPacket();

  delay(5000); // Обновление каждые 5 секунд
}
